<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.post">
    <resultMap id="postResult" type="postDTO">
        <result property="postId" column="POSTID" />
        <result property="userNickname" column="USER_NICKNAME" />
        <result property="content" column="CONTENT" />
        <result property="uploadDate" column="UPLOADDATE" />
        <result property="date" column="DATE" />
    </resultMap>
    <resultMap id="imageResult" type="imageDTO">
        <result property="postId" column="postId" />
        <result property="imageNo" column="imageNo" />
        <result property="fileName" column="fileName" />
        <result property="filePath" column="filePath" />
    </resultMap>
    <resultMap id="commentResult" type="commentDTO">
        <result property="postId" column="POSTID" />
        <result property="level" column="LEVEL" />
        <result property="commentId" column="COMMENTID" />
        <result property="parentNo" column="PARENTNO" />
        <result property="postComment" column="POSTCOMMENT" />
        <result property="writeDate" column="WRITEDATE" />
        <result property="user_Nickname" column="USER_NICKNAME" />
    </resultMap>


    <!-- 게시물 추가(이미지는 따로 저장) -->
    <insert id="addPost" parameterType="postDTO">
        <![CDATA[
                INSERT INTO SNS_POST VALUES (postId_seq.nextval, #{userNickname}, #{content}, sysdate)
                ]]>
    </insert>

    <!-- 이미지 추가 -->
    <insert id="addImage" parameterType="java.util.Map">
        <foreach item="item" collection="list" open="insert all" separator=" " close="select * from dual">
            into sns_image values(#{item.postId}, #{item.imageNo}, #{item.fileName}, #{item.filePath})
        </foreach>
    </insert>

    <!-- 게시물 번호 -->
    <select id="selectPostId" resultType="int">
        <![CDATA[ select case when max(postid) is null then 1 else max(postId) + 1 end from SNS_POST]]>
    </select>

    <!-- 이미지 번호 -->
    <select id="selectImageNo" resultType="int">
        <![CDATA[ select nvl(min(imageNo),1) from sns_image]]>
    </select>

    <!-- 회원 닉네임 가져오기 -->
    <select id="selectNickname" resultType="String" parameterType="String">
        <![CDATA[ select USER_NICKNAME from USERS where ACCOUNT_ID = #{accountID} ]]>
    </select>

    <!-- 설지연  -->
    <!--게시물 가져오기(게시물번호, 닉네임, 게시글, 업로드날짜-->
    <select id="postList" resultMap="postResult">
		<![CDATA[
        select * from SNS_POST order by UPLOADDATE desc
        ]]>
	</select>

    <select id="likeCheck" parameterType="java.util.Map" resultType="int">
        <![CDATA[
        select count(*) from SNS_LIKE where USER_NICKNAME=#{loginId} and POSTID=#{contentNo}
        ]]>
    </select>

    <select id="bookmarkCheck" parameterType="java.util.Map" resultType="int">
        <![CDATA[
        select count(*) from SNS_BOOKMARK where USER_NICKNAME=#{loginId} and POSTID=#{contentNo}
        ]]>
    </select>

    <!--태그 가져오기-->
    <select id="getTag" parameterType="int" resultType="String">
        <![CDATA[
        select HASHTAG from SNS_TAG where POSTID=#{contentNo}
        ]]>
    </select>

    <select id="getCommentList"  resultType="commentDTO" parameterType="int">
        <![CDATA[
        select level, COMMENTID, PARENTNO, POSTID, POSTCOMMENT,WRITEDATE, USER_NICKNAME
        from SNS_COMMENT
        WHERE POSTID = #{postId}
        start with parentNo = 0 connect by prior COMMENTID=parentno
        order SIBLINGS by COMMENTID desc
        ]]>
    </select>

    <select id="likeCnt" parameterType="int" resultType="int">
        <![CDATA[
        select count(*) from SNS_LIKE where POSTID=#{contentNo}
        ]]>
    </select>

    <delete id="deletLike" parameterType="java.util.Map">
        <![CDATA[
        delete from SNS_LIKE where USER_NICKNAME=#{loginNickname} and POSTID=#{postId}
        ]]>
    </delete>

    <select id="selectNewLikeId" parameterType="int" resultType="int">
        <![CDATA[
        select nvl(max(likeid),0) from SNS_LIKE
        ]]>
    </select>

    <insert id="pushLike" parameterType="java.util.Map">
        <![CDATA[
        insert into SNS_LIKE values (#{newLikeId},#{postId},#{loginNickname},sysdate)
        ]]>
    </insert>

    <!-- SNS_BOOKMARK 테이블 식별자번호 가져오기 -->
    <select id="selectNewBookmarkId" parameterType="int" resultType="int">
        <![CDATA[
        select nvl(max(bookmarkid),0) from SNS_BOOKMARK
        ]]>
    </select>

    <!-- 북마크 취소 -->
    <delete id="deletBook" parameterType="java.util.Map">
        <![CDATA[
        delete from SNS_BOOKMARK where USER_NICKNAME=#{loginNickname} and POSTID=#{postId}
        ]]>
    </delete>

    <!-- 북마크 저장 -->
    <insert id="pushBook" parameterType="java.util.Map">
        <![CDATA[
        insert into SNS_BOOKMARK values (#{newBookmarkId},#{loginNickname},#{postId},sysdate)
        ]]>
    </insert>

    <!-- 로그인된 계정의 닉네임 가져오기 -->
    <select id="selectLoginNickname" parameterType="String" resultType="String">
        <![CDATA[
        select USER_NICKNAME from USERS where ACCOUNT_ID=#{accountId}
        ]]>
    </select>

    <!-- COMMENTID 가져오기 -->
    <select id="getCommentId" parameterType="int" resultType="int">
        <![CDATA[
        select nvl(max(commentid),0) from SNS_COMMENT
        ]]>
    </select>

    <!-- 댓글 저장하기 -->
    <insert id="inputComment" parameterType="java.util.Map">
        <![CDATA[
        insert into SNS_COMMENT values (#{commentId},#{parentNo},#{postId},#{loginNickname},#{postComment},sysdate)
        ]]>
    </insert>

    <!--이미지 전체리스트 가져오기 -->
    <select id="getImageList" resultType="org.example.post.dto.ImageDTO">
        <![CDATA[
        select * from SNS_IMAGE order by POSTID asc, IMAGENO asc
        ]]>
    </select>

    <!--게시물 삭제-->
    <delete id="deletePost" parameterType="int">
        <![CDATA[
        delete from SNS_POST where POSTID=#{postId}
        ]]>
    </delete>

    <!-- 프로필 이미지 가져오기 -->
    <select id="getProfileImg" parameterType="String" resultType="String">
        <![CDATA[
        select PROFILEIMG from USERS where USER_NICKNAME=#{userNickname}
        ]]>
    </select>

    <!-- 게시물의 좋아요 정보 가져오기 -->
    <select id="getLikeInfo" parameterType="int" resultType="String">
        <![CDATA[
        select USER_NICKNAME from SNS_LIKE where POSTID=#{postId}
        ]]>
    </select>

    <!-- 대댓글의 commentId 가져오기 -->
    <select id="getReplyComment" parameterType="int" resultType="int">
        <![CDATA[
        select COMMENTID
        from SNS_COMMENT
        start with COMMENTID = #{commentId} connect by prior COMMENTID=PARENTNO
        order SIBLINGS by COMMENTID desc
        ]]>
    </select>

    <select id="selectNewfollowId" resultType="int">
        <![CDATA[
        select nvl(max(FOLLOWID),0) from SNS_FOLLOW
        ]]>
    </select>

    <insert id="follow" parameterType="java.util.Map">
        <![CDATA[
        insert into SNS_FOLLOW values(#{followId},#{loginId},#{followerUserId})
        ]]>
    </insert>

    <!-- 팔로우한 닉네임 리스트 -->
    <select id="getfollowList" parameterType="String" resultType="String">
        <![CDATA[
        select FOLLOWERUSERID from SNS_FOLLOW where USER_NICKNAME=#{loginNickname}
        ]]>
    </select>

    <!--팔로우 취소-->
    <delete id="deleteFollow" parameterType="java.util.Map">
        <![CDATA[
        delete from SNS_FOLLOW where USER_NICKNAME=#{loginId} and FOLLOWERUSERID=#{followingUserId}
        ]]>
    </delete>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="int">
        <![CDATA[
        delete from SNS_COMMENT where COMMENTID IN
        (SELECT COMMENTID FROM SNS_COMMENT START WITH COMMENTID=#{commentId} CONNECT BY PRIOR COMMENTID=PARENTNO)
        ]]>
    </delete>

    <!-- 북마크된 postId 가져오기 -->
    <select id="getBookMarkId" parameterType="String" resultType="int">
        <![CDATA[
        select POSTID from SNS_BOOKMARK where USER_NICKNAME=#{loginNickname} order by BOOKMARKTIME desc
        ]]>
    </select>

    <!-- 저장된 파일의 첫번째 이미지이름 가져오기 -->
    <select id="getFirstFileName" parameterType="int" resultType="String">
        <![CDATA[
        select FILENAME from SNS_IMAGE where POSTID=#{postId} and IMAGENO=1
        ]]>
    </select>

    <!-- 게시물 전체 댓글 수 -->
    <select id="getCommentCnt" parameterType="int" resultType="int">
        <![CDATA[
        select count(*) from SNS_COMMENT where POSTID=#{postId}
        ]]>
    </select>

    <!--북마크 게시물 이미지 정보 가져오기 -->
    <select id="getPostImage" parameterType="java.util.List" resultType="org.example.post.dto.ImageDTO">
        <![CDATA[
        select * from SNS_IMAGE where POSTID in
        ]]>
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by IMAGENO asc
    </select>

    <select id="getUserNickname" parameterType="int" resultType="String">
        <![CDATA[
            select USER_NICKNAME from SNS_POST where POSTID=#{postId}
        ]]>
    </select>

    <select id="getWriteDate" resultType="java.sql.Date" parameterType="int">
        <![CDATA[
        select UPLOADDATE from SNS_POST where POSTID=#{postId}
        ]]>
    </select>

    <select id="getBookMarkId2" resultType="int" parameterType="java.util.Map">
        <![CDATA[
        select BOOKMARKID from SNS_BOOKMARK where POSTID=#{postId} and USER_NICKNAME=#{loginNickname}
        ]]>
    </select>

    <delete id="bookMarkCancle" parameterType="int">
        <![CDATA[
        delete from SNS_BOOKMARK where BOOKMARKID=#{bookMarkId}
        ]]>
    </delete>

    <select id="follow_postList" parameterType="java.util.List" resultMap="postResult">
        <![CDATA[
        select * from SNS_POST where USER_NICKNAME in
        ]]>
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by UPLOADDATE desc
    </select>

    <delete id="followCancle" parameterType="java.util.Map">
        <![CDATA[
        delete from SNS_FOLLOW where USER_NICKNAME=#{loginNickname} and FOLLOWERUSERID=#{followerUserId}
        ]]>
    </delete>
</mapper>
